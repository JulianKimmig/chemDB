# Generated by Django 3.0.6 on 2020-05-23 11:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('chemicaldb', '0002_auto_20200522_0649'),
    ]

    operations = [
        migrations.CreateModel(
            name='Additives',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concentration', models.FloatField()),
                ('concentration_unit', models.CharField(choices=[('M_L', 'mol/L'), ('G_L', 'g/L')], default='M_L', max_length=3)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='np_additive', to='chemicaldb.Substance')),
            ],
        ),
        migrations.CreateModel(
            name='Materials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relative_content', models.FloatField()),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='np_material', to='chemicaldb.Substance')),
            ],
        ),
        migrations.CreateModel(
            name='NanoparticlePreparationMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Nanoparticle',
            fields=[
                ('substance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='chemicaldb.Substance')),
                ('additives', models.ManyToManyField(related_name='as_nanopartice_additive', through='experiments_nanoparticle.Additives', to='chemicaldb.Substance')),
                ('materials', models.ManyToManyField(related_name='as_nanopartice_material', through='experiments_nanoparticle.Materials', to='chemicaldb.Substance')),
                ('preparation_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='experiments_nanoparticle.NanoparticlePreparationMethod')),
            ],
            bases=('chemicaldb.substance',),
        ),
        migrations.AddField(
            model_name='materials',
            name='nanoparticle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='np_material_particle', to='experiments_nanoparticle.Nanoparticle'),
        ),
        migrations.AddField(
            model_name='additives',
            name='nanoparticle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='np_additives_particle', to='experiments_nanoparticle.Nanoparticle'),
        ),
    ]
